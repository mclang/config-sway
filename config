#
# Configuration for Sway Window Manager.
# - https://wiki.archlinux.org/title/Wayland
# - https://wiki.archlinux.org/title/Sway
# - https://github.com/swaywm/sway
# - https://github.com/swaywm/swaybg
# - https://github.com/swaywm/swayidle
# - https://github.com/swaywm/swaylock
#
# Check [SwayWM Wiki](https://github.com/swaywm/sway/wiki/i3-Migration-Guide) for things like:
# - i3 Migration guide
# - Running programs natively under Wayland
# - Setting environmental values
# - Useful add-ons for Sway
#
# NOTES:
# - Use `--no-startup-id` for executing things that do NOT need to be tracked by sway any way
#
# TODO:
# - Cleanup the rest of lingering i3 things
# - Reorder e.g all the `bindsym` things in sensible manner
#


#######################
# config starts here  #
#######################

# Font for window titles (titles MUST be disabled when using `i3-gaps`).
# Will also be used by the bar unless a different font is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango: Noto Sans Regular 10
font pango: FiraCode Nerd Font 10

# Set the default modifier key.
# Use `wev -f wl_keyboard` to find which key is which.
# -> Duck/Tux/Windows key is Mod4 (Super_L)
set $mod Mod4


#####################
# workspace layout  #
#####################

# Default to tiling mode:
workspace_layout default

# Stacking layout:
# Each window will be fullscreen and tabbed top to bottom.
#workspace_layout stacking

# Tabbed layout:
# Each new window will open fullscreen as a tab (left to right)
#workspace_layout tabbed


##############################
# extra options for windows  #
##############################

# Default border styles for new windows
default_border          pixel 1
default_floating_border pixel 5

gaps inner 4
gaps outer 2
smart_borders on
smart_gaps    on

# Use thin borders when there is only one window visible
hide_edge_borders smart

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Use `$mod+Tab` to jump between the current and the previous workspace
bindsym $mod+Tab  workspace back_and_forth

# Use e.g `$mod+3` to jump between the third workspace and current one:
# NOTE: Not good with multiple monitors when you connect new monitor and want to go certain workspace.
# workspace_auto_back_and_forth yes

# Switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# Move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

# Resize window (you can also use the mouse for that):
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode
    # Pressing left will shrink the window's width.
    # Pressing right will grow the window's width.
    # Pressing up will shrink the window's height.
    # Pressing down will grow the window's height.
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym ntilde resize grow width 10 px or 10 ppt

    # Same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # Make the current window take 50% of the width/height of parent container
    bindsym equal resize set 50 ppt 50 ppt

    # Back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


mode "launcher" {
    bindsym s exec /var/lib/flatpak/exports/bin/com.slack.Slack
    bindsym c exec /usr/bin/gsimplecal
    bindsym f exec /usr/bin/firefox --ProfileManager
    bindsym n exec /usr/bin/thunar
    bindsym o exec /var/lib/flatpak/exports/bin/md.obsidian.Obsidian

    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+l mode "launcher"

# Touching mouse accidentally changes focused window, so disable 'focus follows mouse'. Clicking works still though as it should.
# Mouse warping in other hand is quite useful when having multiple monitors, it keeps cursor near the action... I think.
focus_follows_mouse no
mouse_warping output



##############################
# Input & Output definitions #
##############################

# https://slar.se/configuring-touchpad-in-sway.html
# `swaymsg -t get_inputs --raw | jq '.[] | select(.type=="touchpad")'`
input "type:touchpad" {
    tap enabled         # enables click-on-tap
    tap_button_map lrm  # tap with 1 finger = left click, 2 fingers = right click, 3 fingers = middle click
    dwt enabled         # disable (touchpad) while typing
    dwtp enabled        # disable (touchpad) while track pointing
}

input "type:keyboard" {
    xkb_layout "us"
    xkb_variant "altgr-intl"
}

# Default wallpaper (more available in /usr/share/backgrounds/sway/)
output * bg ~/.config/sway/swaylock/One-OS-to-rule-them-all.jpg fill

### Monitor/Output configuration.
set $primary eDP-1

# For Variable Refresh Rate / Adaptive Sync, check:
#   https://github.com/swaywm/sway/wiki/VRR-setups
# Query Adaptive Sync state eg using:
#   `swaymsg -t get_outputs | jq '.[] | pick(.name, .adaptive_sync_status)'`
output $primary {
    adaptive_sync on
    mode 1920x1080@144Hz
}
output 'Dell Inc. DELL S3220DGF 6J2M4W2' {
    adaptive_sync off
    mode 2560x1440@144Hz
}
output 'Samsung Electric Company LC34G55T HNKNC00507' {
    adaptive_sync off
    mode 3440x1440@100Hz
}



################################################
# keybindings for different (NON ROFI) actions #
################################################

# NOTE: Do NOT put comments on the SAME LINE after the keybindins unless you want ERRORS

# Change keyboard LED brightness using `Fn+F2/F3` keys:
bindsym XF86KbdBrightnessUp   exec --no-startup-id /usr/bin/asusctl -n
bindsym XF86KbdBrightnessDown exec --no-startup-id /usr/bin/asusctl -p

# Cycle keyboard LED modes using the 'Aura' key (`Fn+F4`)
bindsym XF86Launch3 exec --no-startup-id asusctl led-mode -n

# Change screen backlight brightness using `Fn+F7/F8` keys:
# Install `acpilight` and add user into `video` group
bindsym XF86MonBrightnessUp   exec --no-startup-id brightnessctl -c 'backlight' -q set +10%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl -c 'backlight' -q set 10%-

# TODO: Toggle external monitor using `Fn+F9` that Asus FW sends as `meta+p`
# bindsym $mod+p exec --no-startup-id ~/.config/i3/scripts/toggle-monitors.sh


# Kill focused window
bindsym $mod+Shift+q kill

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 INPLACE (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart


# Change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
#bindsym $mod+b focus up
#bindsym $mod+o focus right

# Alternatively, you can use the cursor keys:
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# Focus 'back-and-forth' between latest active windows using `Alt_L+Tab`:
exec --no-startup-id ~/.config/sway/scripts/track-container-focus.sh
bindsym mod1+Tab [con_mark="_prev"] focus

# Focus on the latest urgent window
bindsym $mod+x [urgent=latest] focus

# Move focused window
#bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
#bindsym $mod+Shift+b move up
#bindsym $mod+Shift+o move right

# Alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left  move left
bindsym $mod+Shift+Down  move down
bindsym $mod+Shift+Up    move up
bindsym $mod+Shift+Right move right

# Split in horizontal orientation
bindsym $mod+h split h

# Split in vertical orientation
bindsym $mod+v split v

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Focus the parent container
bindsym $mod+a focus parent



## Multimedia Keys
# 2021-08-20: Works straight out of box with Asus G14
# 2024-08-14: Using `pactl` works with Sway

# Volume controls
bindsym      XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym      XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1%

# Toggle audio and mic mute
bindsym XF86AudioMute    exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Audio control
bindsym XF86AudioPlay  exec --no-startup-id playerctl play
bindsym XF86AudioPause exec --no-startup-id playerctl pause
bindsym XF86AudioNext  exec --no-startup-id playerctl next
bindsym XF86AudioPrev  exec --no-startup-id playerctl previous



## App shortcuts
bindsym $mod+Return exec /usr/bin/alacritty
bindsym $mod+c      exec /usr/bin/gsimplecal
bindsym $mod+w      exec /usr/bin/firefox --ProfileManager
bindsym $mod+n      exec /usr/bin/thunar
bindsym $mod+o      exec /var/lib/flatpak/exports/bin/md.obsidian.Obsidian


# Flameshot needs some additional setup for Wayland/Sway:
# - https://github.com/flameshot-org/flameshot/blob/master/docs/Sway%20and%20wlroots%20support.md
# - https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0
bindsym Print       exec --no-startup-id "flameshot gui --raw | wl-copy"
bindsym Shift+Print exec --no-startup-id "flameshot gui"



##########################################
# configuration for workspace behaviour  #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# NOTE: Glyphs displayed here when viewed using vim/nvim can differ from the ones displayed on the bar!
# - Check console/terminal font vs Font Awesome code point differences
set $ws1 1:
set $ws2 2:
set $ws3 3:
set $ws4 4:
set $ws5 5:
set $ws6 6:
set $ws7 7:
set $ws8 8:
set $ws9 9:
set $ws10 10:

# Bind workspaces to different displays.
# Replace VGA-0/HDMI-0 with the names for your displays you can get from
# `swaymsg -t get_outputs` command, or use `primary`/`secondary` shortcuts if defined
workspace $ws1 output $primary
# workspace $ws2 output VGA-0
# workspace $ws3 output HDMI-0
# workspace $ws4 output HDMI-0
# workspace $ws5 output HDMI-0
workspace $ws10 output $primary


# Move whole workspace between monitors
bindsym $mod+Control+Shift+Left  move workspace to output left
bindsym $mod+Control+Shift+Down  move workspace to output down
bindsym $mod+Control+Shift+Up    move workspace to output up
bindsym $mod+Control+Shift+Right move workspace to output right



#############################################
# autostart applications/services on login  #
#############################################

# Might fix slow GTK app startup?
# https://support.mozilla.org/en-US/questions/1383497
# exec --no-startup-id dbus-update-activation-environment --systemd DBUS_SESSION_BUS_ADDRESS DISPLAY XAUTHORITY &

# Might fix slow GTK app startup?
#  https://github.com/swaywm/sway/issues/5732
# DID NOT WORK exec systemctl --user import-environment

#  https://bbs.archlinux.org/viewtopic.php?id=239331
# DID NOT WORK exec --no-startup-id /etc/X11/xinit/xinitrc.d/50-systemd-user.sh


# Get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Use `dex` to execute `.desktop` files
# keep in mind that it can cause issues
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
# exec --no-startup-id dex --autostart --environment i3



### Idle and Screen-Lock configuration
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
exec swayidle -w \
    timeout 300  'swaylock -f --config ~/.config/sway/swaylock/config' \
    timeout 600  'swaymsg "output * power off"' \
        resume   'swaymsg "output * power on"' \
    before-sleep 'swaylock -f --config ~/.config/sway/swaylock/config' \
    lock         'swaylock -f --config ~/.config/sway/swaylock/config'
bindsym $mod+Shift+l exec swaylock -f --config ~/.config/sway/swaylock/config



# Desktop notifications using `dunst` and `dunstctl`:
exec --no-startup-id dbus-launch /usr/bin/dunst --config ~/.config/dunst/dunstrc
bindsym $mod+Escape       exec --no-startup-id /usr/bin/dunstctl close
# bindsym $mod+Shift+Escape exec --no-startup-id /usr/bin/dunstctl close-all
bindsym $mod+Shift+Escape exec --no-startup-id /usr/bin/dunstctl history-pop
# bindsym $mod+Shift+F12    exec notify-send "Notification Title" "Notification Messages"




##################
# Application Workspace and Floating Rules #
##################

# Bind programs to workspaces and focus them automatically if the workspace is different than the current one.
# Notes:
# - Use `swaymsg -t get_tree` to find the needed `instance` and `class` strings in respective order.
# - Some programs, most notably Firefox, update their title AFTER it is created, so `assign` with `title` selector does NOT work :/
# Not sure if following applies to Sway also:
# - Furthermore simple `assign` with `class` selector seems flaky, at least with Firefox...
# - Using `for_window` without additional selector like `title` or `instance` moves ALL matching windows when they get FOCUSED.

# Direct assign catches ALL: assign [app_id="firefox"] $ws2
for_window [app_id="firefox" title="About Mozilla Firefox"] floating enable
for_window [app_id="firefox" title="Choose User Profile"]   floating enable
for_window [app_id="firefox" title="^Page Info"]            floating enable
for_window [app_id="firefox" title="^Extension: \(Bitwarden"] floating enable

assign [app_id="(?i)obsidian"] $ws3
assign [app_id="(?i)discord"]  $ws4
assign [app_id="(?i)signal"]   $ws4
assign [app_id="(?i)slack"]    $ws4

# Steam might either 'app_id' (wayland) or 'class' (xwindows):
assign [app_id="steam"]   $ws9
assign [class="steam"]    $ws9
for_window [class="steam" title="^Account Alert for"]           floating enable
for_window [class="steam" title="^Friends"]                     floating enable
#for_window [class="(?i)Steam" title="^PayPal"]                  floating enable
#for_window [class="(?i)Steam" title="^Steam \- News"]           floating enable
#for_window [class="(?i)Steam" title="^Steam \- Self Updater"]   floating enable
#for_window [class="(?i)Steam" title="event started"]            floating enable

# Enable floating (non-tiling) for apps or application windows that work BEST when floating:
for_window [app_id="blueberry.py"]          floating enable
for_window [app_id="galculator"]            floating enable
#for_window [class="Nm-connection-editor"]   floating enable
for_window [app_id="pavucontrol"]           floating enable
#for_window [class="qt5ct" instance="qt5ct"] floating enable
#for_window [window_role="About"]            floating enable
#for_window [window_role="pop-up"]           floating enable             # These two might make some of
#for_window [window_role="task_dialog"]      floating enable             # the old custom additions obsolete!
for_window [app_id="wev"]                   floating enable, resize set width 20ppt height 20ppt
for_window [app_id="yad"]                   floating enable, resize set width 640 height 700
#for_window [class="Xsane" instance="xsane"] floating enable SEEMS TO HIDE MAIN WINDOW AFTER SCANNING!
for_window [app_id="system-config-printer"] floating enable
#for_window [class="(?i)zoom"]               floating enable             # Catches ALL Zoom windows
for_window [app_id="thunar"                 title="^File Operation Progress"]   floating enable
for_window [app_id="xdg-desktop-portal-gtk" title="^Open Folder$"]              floating enable


#for_window {
#  [shell="xwayland"] title_format "%title [XWayland]"
#  [app_id="firefox"] inhibit_idle fullscreen
#  [app_id="mpv"] inhibit_idle fullscreen
#  [app_id="Vivaldi-stable"] inhibit_idle fullscreen
#  [app_id="ulauncher"] floating enable, border none
#  [window_role="pop-up"] floating enable
#  [window_role="bubble"] floating enable
#  [window_role="dialog"] floating enable
#  [window_type="dialog"] floating enable
#  # terminal
#  [app_id=$term_id] move to scratchpad, scratchpad show, $t_pos
#  [app_id=$other_term_id] move to scratchpad, scratchpad show, t_pos
#}
#for_window [title="(?:Open|Save) (?:File|Folder|As)"] floating enable, resize set width 1030 height 710

# Differentiate `xwayland` programs
for_window [shell="xwayland"] title_format "[XWayland] %title"



# Set floating for misc app dialogs that are not recognized automatically
#   https://wiki.archlinux.org/title/I3#Correct_handling_of_floating_dialogs
#   https://www.debuggex.com/cheatsheet/regex/pcre
#   https://regex101.com/



#########################
# Scratchpad config     #
#########################
#set $sp_ml    5
#set $sp_mt   30
#set $sp_h   600
#set $sp_w   900

# Alacritty with smaller font:
# NOTE: Maybe 'password of the day' and other unnecessary things should be removed?
#exec --no-startup-id "alacritty -o 'env.SIMPLE_GREET: \"true\"' -o 'font.size: 8' --title 'Alacritty Scratchpad'"
#for_window [class="Alacritty" title="Alacritty Scratchpad"] move scratchpad, move position $sp_ml $sp_mt, resize set $sp_w $sp_h
#bindsym $mod+F1 [class="Alacritty"] scratchpad show

# Simple text editor for quick notes:
#exec --no-startup-id "xed --name 'Scratchpad' --standalone '/tmp/xed-scratchpad.md'"
#for_window [class="Xed" instance="Scratchpad"] move scratchpad, move position $sp_ml $sp_mt, resize set $sp_w $sp_h
#bindsym $mod+F2 [class="Xed" instance="Scratchpad"] scratchpad show


######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkblue       #08052b
set $lightblue      #5294e2
set $urgentred      #e53935
set $white          #ffffff
set $black          #000000
set $purple         #e345ff
set $darkgrey       #383c4a
set $grey           #b0b5bd
set $mediumgrey     #8b8b8b
set $yellowbrown    #e1b700

# Define colors for windows:
# Check `man 5 sway` an search for `indicator`.
# class                 border      bground     text        indicator   child_border
client.focused          $lightblue  $darkblue   $white      $purple     $mediumgrey
client.unfocused        $darkblue   $darkblue   $grey       $purple     $darkgrey
client.focused_inactive $darkblue   $darkblue   $grey       $purple     $black
client.urgent           $urgentred  $urgentred  $white      $purple     $yellowbrown


############################################
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
#bar {
#    # Try `Font Awesome 5 Free Solid 10` if glyphs don't work
#    font pango: Noto Sans Mono, Font Awesome 6 Free 10
#    position top
#    # status_command /usr/bin/i3status-rs ~/.config/i3/i3status-rust.toml
#
#
#    tray_output primary
#    # tray_padding 10
#
#    # When strip_workspace_numbers is set to yes, any workspace that has a name of the form
#    # `[n][:][NAME]`` will display ONLY the name.
#    # strip_workspace_numbers yes
#
#    colors {
#        separator           $purple
#        background          $darkgrey
#        statusline          $white
#        #                   border          bg          txt
#        focused_workspace   $mediumgrey     $grey       $darkgrey
#        active_workspace    $lightblue      $mediumgrey $darkgrey
#        inactive_workspace  $darkgrey       $darkgrey   $grey
#        urgent_workspace    $urgentred      $urgentred  $white
#    }
#}

bar {
    # https://github.com/Alexays/Waybar/wiki/Configuration
    swaybar_command waybar
}

# exec waybar -c ~/.config/sway/waybar.cnf -s ~/.config/sway/waybar.css


#####################################
# Application menu handled by rofi  #
#####################################

## rofi bindings for fancy application menu (two bindings: `$mod+d`, and `$mod+/`)
# NOTE: Pass the final command to `swaymsg` so that the resulting window
# can be opened on the original workspace that the command was run on.
bindsym $mod+slash exec rofi -modi drun -show drun -config ~/.config/sway/rofi/rofidmenu.rasi | xargs swaymsg exec --
bindsym $mod+d     exec rofi -modi drun -show drun -config ~/.config/sway/rofi/rofidmenu.rasi | xargs swaymsg exec --

## rofi bindings for window menu (one bindings `$mod+tab`)
bindsym $mod+F12   exec rofi -show window -config ~/.config/sway/rofi/rofidmenu.rasi

## rofi bindings to manage clipboard (install `rofi-greenclip from` the AUR)
# exec --no-startup-id greenclip daemon>/dev/null
# bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard \
#               -config ~/.config/sway/rofi/rofidmenu.rasi

# rofi binding for power/shutdown menu:
# Check 'https://github.com/jluttine/rofi-power-menu'
bindsym $mod+Shift+End exec rofi -show pwrm -modi pwrm:~/.config/sway/scripts/rofi-power-menu.sh -config ~/.config/sway/rofi/powermenu.rasi

# TODO: Power Profiles menu switcher (rofi) using `Fan` key (`Fn+F5`)
# bindsym XF86Launch4  exec ~/.config/i3/scripts/power-profiles
# bindsym $mod+Shift+p exec ~/.config/i3/scripts/power-profiles

include /etc/sway/config.d/*

